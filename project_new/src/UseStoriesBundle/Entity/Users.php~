<?php

namespace UserStoriesBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Users
 *
 * @ORM\Table(name="users")
 * @ORM\Entity(repositoryClass="UserStoriesBundle\Repository\UsersRepository")
 */
class Users
{
        /**
     * @ORM\OneToMany(targetEntity="Address", mappedBy="user")
     */
        private $address;
        
                /**
     * @ORM\OneToMany(targetEntity="Email", mappedBy="user")
     */
      private $email;
              /**
     * @ORM\OneToMany(targetEntity="Phone", mappedBy="user")
     */
      private $phones;
              /**
     * @ORM\OneToMany(targetEntity="Groups", mappedBy="user")
     */
      
      private $groups;
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @var string
     *
     * @ORM\Column(name="surname", type="string", length=255)
     */
    private $surname;

    /**
     * @var string
     *
     * @ORM\Column(name="descritpion", type="string", length=255)
     */
    private $descritpion;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->address = new \Doctrine\Common\Collections\ArrayCollection();
        $this->email = new \Doctrine\Common\Collections\ArrayCollection();
        $this->phones = new \Doctrine\Common\Collections\ArrayCollection();
        $this->groups = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Users
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set surname
     *
     * @param string $surname
     * @return Users
     */
    public function setSurname($surname)
    {
        $this->surname = $surname;

        return $this;
    }

    /**
     * Get surname
     *
     * @return string 
     */
    public function getSurname()
    {
        return $this->surname;
    }

    /**
     * Set descritpion
     *
     * @param string $descritpion
     * @return Users
     */
    public function setDescritpion($descritpion)
    {
        $this->descritpion = $descritpion;

        return $this;
    }

    /**
     * Get descritpion
     *
     * @return string 
     */
    public function getDescritpion()
    {
        return $this->descritpion;
    }

    /**
     * Add address
     *
     * @param \UserStoriesBundle\Entity\Adress $address
     * @return Users
     */
    public function addAddres(\UserStoriesBundle\Entity\Adress $address)
    {
        $this->address[] = $address;

        return $this;
    }

    /**
     * Remove address
     *
     * @param \UserStoriesBundle\Entity\Adress $address
     */
    public function removeAddres(\UserStoriesBundle\Entity\Adress $address)
    {
        $this->address->removeElement($address);
    }

    /**
     * Get address
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getAddres()
    {
        return $this->address;
    }

    /**
     * Add email
     *
     * @param \UserStoriesBundle\Entity\Email $email
     * @return Users
     */
    public function addEmail(\UserStoriesBundle\Entity\Email $email)
    {
        $this->email[] = $email;

        return $this;
    }

    /**
     * Remove email
     *
     * @param \UserStoriesBundle\Entity\Email $email
     */
    public function removeEmail(\UserStoriesBundle\Entity\Email $email)
    {
        $this->email->removeElement($email);
    }

    /**
     * Get email
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Add phones
     *
     * @param \UserStoriesBundle\Entity\Phone $phones
     * @return Users
     */
    public function addPhone(\UserStoriesBundle\Entity\Phone $phones)
    {
        $this->phones[] = $phones;

        return $this;
    }

    /**
     * Remove phones
     *
     * @param \UserStoriesBundle\Entity\Phone $phones
     */
    public function removePhone(\UserStoriesBundle\Entity\Phone $phones)
    {
        $this->phones->removeElement($phones);
    }

    /**
     * Get phones
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getPhones()
    {
        return $this->phones;
    }

    /**
     * Add groups
     *
     * @param \UserStoriesBundle\Entity\Groups $groups
     * @return Users
     */
    public function addGroup(\UserStoriesBundle\Entity\Groups $groups)
    {
        $this->groups[] = $groups;

        return $this;
    }

    /**
     * Remove groups
     *
     * @param \UserStoriesBundle\Entity\Groups $groups
     */
    public function removeGroup(\UserStoriesBundle\Entity\Groups $groups)
    {
        $this->groups->removeElement($groups);
    }

    /**
     * Get groups
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getGroups()
    {
        return $this->groups;
    }

    /**
     * Add address
     *
     * @param \UserStoriesBundle\Entity\Address $address
     * @return Users
     */
    public function addAddress(\UserStoriesBundle\Entity\Address $address)
    {
        $this->address[] = $address;

        return $this;
    }

    /**
     * Remove address
     *
     * @param \UserStoriesBundle\Entity\Address $address
     */
    public function removeAddress(\UserStoriesBundle\Entity\Address $address)
    {
        $this->address->removeElement($address);
    }

    /**
     * Get address
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getAddress()
    {
        return $this->address;
    }
}
